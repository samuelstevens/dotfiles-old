#!/usr/bin/env bash
set -e

# install gitsubmodules again
git submodule update --init --recursive

# finds all files in the current directory that are not executable (not ./install) and symlinks them.
find ~/dotfiles -maxdepth 1 -type f \! -perm -u=x -name '[!.]*' -print0 | \
    xargs -0 -I{} basename {} | \
    xargs -I{} ln -sf ~/dotfiles/{} ~/.{}

# finds all files in the config directory that are not executable (not ./install) and symlinks them.
for file in $(find ~/dotfiles/config -type f \! -perm -u=x -name '[!.]*'); do
    src_file=$(realpath $file)
    relative_path=$(echo $file | sed 's/.*dotfiles\/config\///')
    dst_file=~/.config/$relative_path
    mkdir -p $(dirname $dst_file)
    echo "Symlinking $src_file to $dst_file"
    ln -sf $src_file $dst_file
done

symlink_dir() {
    echo "Symlinking $2 to $1"
    rm -f $2
    mkdir -p $(dirname $2)
    ln -s $1 $2
}

symlink_dir_to_hidden() {
    mkdir -p $2
    for file in $(ls $1); do
        src_file="$1/$file"
        dst_file="$2/.$file"
        echo "Symlinking $src_file to $dst_file"
        ln -sf $src_file $dst_file
    done
}

symlink_dir ~/dotfiles/vim ~/.vim
symlink_dir ~/dotfiles/bash ~/.bash
symlink_dir ~/dotfiles/fzf ~/.fzf
symlink_dir ~/dotfiles/pyenv ~/.pyenv
symlink_dir ~/dotfiles/shared ~/.shared
symlink_dir ~/dotfiles/bin/scripts ~/bin/scripts

symlink_dir_to_hidden ~/dotfiles/zsh ~/.zsh

~/.fzf/install --no-update-rc --completion --key-bindings
